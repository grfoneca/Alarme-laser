const int red = 9;
const int green = 8;
botão const int = 7;
int estado = 0; // No início, o sistema está desligado.
int val = 0; // Armazena o valor do estado entre um ciclo e outro
void setup () {
 pinMode (verde, OUTPUT); // Inicialize a saída dos pinos verdes.
 pinMode (vermelho, OUTPUT); // Inicializa a saída do pino vermelho.
 pinMode (botão, INPUT); // Inicializa a saída do pino do botão
}
 void loop () {
val = digitalRead (botão); // eu li o status do sinal
 atraso (10);
 if (val == HIGH) {// É um truque para manter o
 estado = 1 - estado; // valor da escolha feita com o botão.
 }
 if (state == HIGH) {// Se eu apertei o botão eu ligo o sistema
 digitalWrite (vermelho, BAIXO);
 digitalWrite (verde, ALTO);
 else {// Se eu não apertei o botão eu ligo o vermelho vermelho
 digitalWrite (verde, BAIXO);
 digitalWrite (vermelho, ALTO);
 }
 }
// Definimos constantes para simplificar a linguagem:
const int amarelo = 11;
const int red = 9;
const int green = 8;
botão const int = 7;
transistor const int = 5;
int estado = 0; // No início, o sistema está desligado.
int val = 0; // Armazena o valor do estado entre um ciclo e outro
int luz;
void setup () {
pinMode (verde, OUTPUT); // Inicialize a saída dos pinos verdes.
 pinMode (vermelho, OUTPUT); // Inicializa a saída do pino vermelho.
 pinMode (botão, INPUT); // Inicializa a saída do pino do botão
 pinMode (transistor, OUTPUT);
 pinMode (A0, ENTRADA);
}
  void loop () {
 val = digitalRead (botão); // Eu li o status do sinal (se clicado ou não)
 atraso (10);
  if (val == HIGH) {// É um truque para preservar o valor
 estado = 1 - estado; // da escolha feita com o botão.
 }
  if (state == HIGH) {// Se eu apertei o botão eu ligo o sistema
 digitalWrite (vermelho, BAIXO);
 digitalWrite (verde, ALTO);
 digitalWrite (transistor, 1);
 luz = analogRead (A0);
  se (luz <100) {
 tom (3, 440);
 }
  else {// Se eu não apertei o botão eu ligo o vermelho vermelho
 noTone (3);
 digitalWrite (verde, BAIXO);
 digitalWrite (vermelho, ALTO);
 digitalWrite (transistor, 0);
 }
}
